name: Create Release Notes PR
on:
  release:
    types: [published]

jobs:
  add-release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Generate release notes
        run: |
          RELEASE_NAME="${{ github.event.release.name }}"
          RELEASE_BODY="${{ github.event.release.body }}"
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          RELEASE_DATE=$(date +%Y-%m-%d)
          REPO_NAME="Plugin Pipeline Example"
          CATEGORIES="wordpress,plugin"
          RELEASE_LINK="https://github.com/${{ github.repository }}/releases/tag/${RELEASE_TAG}"

          cat <<EOF > release-note.md
          ---
          title: ${REPO_NAME} ${RELEASE_TAG} now available
          published_date: "${RELEASE_DATE}"
          categories: [${CATEGORIES}]
          ---
          
          The latest version of ${REPO_NAME}, [${RELEASE_TAG}](${RELEASE_LINK}), is available as of $(date +"%B, %d, %Y").

          ${RELEASE_BODY}
          EOF

          echo "release_notes_path=$(pwd)/release-note.md" >> $GITHUB_ENV
          echo "release_date=${RELEASE_DATE}" >> $GITHUB_ENV
          echo "repo_name=${REPO_NAME}" >> $GITHUB_ENV
          echo "release_note_categories=${CATEGORIES}" >> $GITHUB_ENV
          echo "release_link=${RELEASE_LINK}" >> $GITHUB_ENV
      - name: Copy Release Notes & Create PR
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          REPO_SLUG=$(basename "${{ github.repository }}")
          PR_TITLE="Release notes for ${{ env.repo_name }} ${{ github.event.release.tag_name }}"
          RELEASE_NOTE_FILENAME="${{ env.release_date }}-${REPO_SLUG}-$(echo "${{ github.event.release.tag_name }}" | tr '.' '-').md"
          PR_BODY="* **[Release Notes](https://docs.pantheon.io/releasenotes)** - Adds a release note for ${{ env.repo_name }} [${{ github.event.release.tag_name }}](https://github.com/${{ github.repository }}/releases/tag/${{ github.event.release.tag_name }})."
          PR_BRANCH="releasenote-${{ env.release_date }}-${REPO_SLUG}-${{ github.event.release.tag_name }}"

          echo "Cloning the docs repo"
          git clone https://github.com/jazzsequence/documentation.git
            echo "Copying the release notes"
            if [ -f "${{ env.release_notes_path }}" ]; then
              mv "${{ env.release_notes_path }}" documentation/source/releasenotes/${RELEASE_NOTE_FILENAME}
              echo "Release notes copied successfully."
            else
              echo "Error: Release notes file not found at ${{ env.release_notes_path }}"
              exit 1
            fi
            cat documentation/source/releasenotes/"${RELEASE_NOTE_FILENAME}"

            cd documentation

            echo "Setting up git config"
            git config --global user.name "Pantheon Bot"
            git config --global user.email "bot@getpantheon.com"
            git remote set-url origin https://${{ secrets.TOKEN }}@github.com/jazzsequence/documentation.git            
            git checkout -b releasenote-${RELEASE_NOTE_FILENAME}
            git add source/releasenotes/${RELEASE_NOTE_FILENAME}
            git commit -m "Add release notes for ${REPO_NAME} ${{ github.event.release.tag_name }}"
            git push --set-upstream origin releasenote-${RELEASE_NOTE_FILENAME}

            echo "Create pull request"
            gh pr create \
              --repo jazzsequence/documentation \
              --base main \
              --head ${PR_BRANCH} \
              --title "${PR_TITLE}" \
              --body "${PR_BODY}"
            
        